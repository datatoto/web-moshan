/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 public/character.glb
*/

import React, { useEffect, useRef } from "react";
import { useGLTF, useAnimations, useKeyboardControls } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import { usePlayerPosStore } from "../stores";
// import {
//   useBox,
//   useCompoundBody,
//   useCylinder,
//   usePlane,
//   useSphere,
// } from "@react-three/cannon";

// import * as THREE from "three";

// const SPEED = 5;
// const direction = new THREE.Vector3();
// const frontVector = new THREE.Vector3();
// const sideVector = new THREE.Vector3();
// const rotation = new THREE.Vector3();

export function Player(props) {
  const ref = useRef();
  // const [ref, api] = useSphere(
  //   () => ({
  //     args: [1, 2, 2],
  //     position: [0, 5, 3],
  //     mass: 40,
  //     ...props,
  //   }),
  //   useRef(null)
  // );

  const { nodes, materials, animations } = useGLTF("/character.glb");
  const { actions } = useAnimations(animations, ref);

  const [playerPos, setPlayerPos] = usePlayerPosStore((state) => [
    state.playerPos,
    state.updatePlayerPos,
  ]);

  // TODO: Keyboard
  const forwardPressed = useKeyboardControls((state) => state.forward);
  const backwardPressed = useKeyboardControls((state) => state.backward);
  const leftPressed = useKeyboardControls((state) => state.left);
  const rightPressed = useKeyboardControls((state) => state.right);

  useEffect(() => {
    // console.log(forwardPressed);

    if (forwardPressed) {
      const newPos = [playerPos[0] + 1, playerPos[1], playerPos[2]];
      setPlayerPos(newPos);
    }
    if (backwardPressed) {
      const newPos = [playerPos[0] - 1, playerPos[1], playerPos[2]];
      setPlayerPos(newPos);
    }
    if (leftPressed) {
      const newPos = [playerPos[0], playerPos[1], playerPos[2] + 1];
      setPlayerPos(newPos);
    }
    if (rightPressed) {
      const newPos = [playerPos[0], playerPos[1], playerPos[2] - 1];
      setPlayerPos(newPos);
    }

    // console.log(playerPos);
  }, [forwardPressed, backwardPressed, leftPressed, rightPressed]);

  // const [sub, get] = useKeyboardControls();
  // useFrame((state) => {
  //   // const { forward, backward, left, right, jump } = get();
  //   const pressed = get().back;
  // });

  return (
    <group {...props} dispose={null} position={playerPos}>
      <group name="Armature" scale={0.01} rotation={[Math.PI / 2, 0, 0]}>
        <primitive object={nodes.mixamorigHips} />
        <skinnedMesh
          name="Ch46"
          geometry={nodes.Ch46.geometry}
          material={materials.Ch46_body}
          skeleton={nodes.Ch46.skeleton}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/character.glb");
