/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 public/character.glb
*/

import React, { useEffect, useRef } from "react";
import { useGLTF, useAnimations, useKeyboardControls } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

// import * as THREE from "three";

// const SPEED = 5;
// const direction = new THREE.Vector3();
// const frontVector = new THREE.Vector3();
// const sideVector = new THREE.Vector3();
// const rotation = new THREE.Vector3();

export function Player(props) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF("/character.glb");
  const { actions } = useAnimations(animations, group);

  // TODO: Keyboard
  // const [sub, get] = useKeyboardControls();

  // useEffect(() => {
  //   return sub(
  //     (state) => state.forward,
  //     (pressed) => {
  //       console.log("forward", pressed);
  //     }
  //   );
  // }, []);

  // useFrame((state) => {
  //   // const { forward, backward, left, right, jump } = get();
  //   const pressed = get().back;
  // });

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <primitive object={nodes.mixamorigHips} />
          <skinnedMesh
            name="Ch46"
            geometry={nodes.Ch46.geometry}
            material={materials.Ch46_body}
            skeleton={nodes.Ch46.skeleton}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/character.glb");
